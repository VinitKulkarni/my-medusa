############################
# Stage‚ÄØ1 ‚Äì‚ÄØBuild stage
############################
FROM node:20-alpine AS build
WORKDIR /app

# 1Ô∏è‚É£ Copy only dependency manifests
COPY package*.json ./

# 2Ô∏è‚É£ Clean and reproducible install
RUN npm ci

# 3Ô∏è‚É£ Copy the rest of the app source
COPY . .

# 4Ô∏è‚É£ Optional build (safe for Vite or Medusa builds)
# Prevent crash if build script doesn't exist
RUN npm run build || true


############################
# Stage‚ÄØ2 ‚Äì‚ÄØRuntime stage
############################
FROM node:20-alpine
WORKDIR /app

# 5Ô∏è‚É£ Copy app from build stage
COPY --from=build /app /app

# 6Ô∏è‚É£ Set environment variables
ENV NODE_ENV=production


# 7Ô∏è‚É£ Entrypoint: run Medusa DB migration first
RUN printf '%s\n' \
    '#!/bin/sh' \
    'set -e' \
    'echo "üîÑ  Running Medusa DB migration‚Ä¶"' \
    'NODE_TLS_REJECT_UNAUTHORIZED=0 npx medusa db:migrate' \
    'echo "‚úÖ  Migration complete ‚Äî launching app"' \
    'exec "$@"' \
  > /usr/local/bin/docker-entrypoint.sh && \
  chmod +x /usr/local/bin/docker-entrypoint.sh

ENTRYPOINT ["docker-entrypoint.sh"]

# 8Ô∏è‚É£ Expose Medusa backend port
EXPOSE 9000

# 9Ô∏è‚É£ Start Medusa app (dev or prod)
CMD ["npm", "run", "start"]
